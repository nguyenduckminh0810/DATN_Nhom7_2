/**
 * Test script for GHN Shipping Service
 * Run this in browser console to test the shipping API
 */

// Import (if using in Vue component)
// import shippingService from '@/services/shippingService'

// Test 1: Get Provinces
async function testGetProvinces() {
  console.log('=== Test 1: Get Provinces ===')
  try {
    const provinces = await shippingService.getProvinces()
    console.log('‚úÖ Success:', provinces.length, 'provinces found')
    console.log('Sample:', provinces.slice(0, 3))
    return provinces
  } catch (error) {
    console.error('‚ùå Error:', error.message)
  }
}

// Test 2: Get Districts (TP.HCM)
async function testGetDistricts() {
  console.log('=== Test 2: Get Districts (TP.HCM) ===')
  try {
    const districts = await shippingService.getDistricts(202) // 202 = TP.HCM
    console.log('‚úÖ Success:', districts.length, 'districts found')
    console.log('Sample:', districts.slice(0, 3))
    return districts
  } catch (error) {
    console.error('‚ùå Error:', error.message)
  }
}

// Test 3: Get Wards (Qu·∫≠n 1)
async function testGetWards() {
  console.log('=== Test 3: Get Wards (Qu·∫≠n 1) ===')
  try {
    const wards = await shippingService.getWards(1542) // 1542 = Qu·∫≠n 1
    console.log('‚úÖ Success:', wards.length, 'wards found')
    console.log('Sample:', wards.slice(0, 3))
    return wards
  } catch (error) {
    console.error('‚ùå Error:', error.message)
  }
}

// Test 4: Get Services
async function testGetServices() {
  console.log('=== Test 4: Get Services ===')
  try {
    const services = await shippingService.getServices(1542)
    console.log('‚úÖ Success:', services.length, 'services found')
    console.log('Services:', services)
    return services
  } catch (error) {
    console.error('‚ùå Error:', error.message)
  }
}

// Test 5: Calculate Shipping Fee
async function testCalculateShippingFee() {
  console.log('=== Test 5: Calculate Shipping Fee ===')
  try {
    const result = await shippingService.calculateShippingFee({
      toDistrictId: 1443, // Qu·∫≠n 3
      toWardCode: '21012', // Ph∆∞·ªùng V√µ Th·ªã S√°u
      totalWeight: 500, // 500g
      insuranceValue: 500000, // 500,000 VNƒê
      serviceId: 53320, // Express
    })
    console.log('‚úÖ Success:')
    console.log('  - Shipping Fee:', shippingService.formatCurrency(result.shippingFee))
    console.log('  - Expected Delivery:', result.expectedDeliveryTime)
    console.log('  - Full result:', result)
    return result
  } catch (error) {
    console.error('‚ùå Error:', error.message)
  }
}

// Test 6: Calculate with different weight
async function testCalculateHeavyPackage() {
  console.log('=== Test 6: Calculate Heavy Package (5kg) ===')
  try {
    const result = await shippingService.calculateShippingFee({
      toDistrictId: 1542,
      toWardCode: '21211',
      totalWeight: 5000, // 5kg
      insuranceValue: 2000000, // 2,000,000 VNƒê
      serviceId: 53321, // Standard
    })
    console.log('‚úÖ Success:')
    console.log('  - Weight:', shippingService.formatWeight(5000))
    console.log('  - Shipping Fee:', shippingService.formatCurrency(result.shippingFee))
    console.log('  - Service:', shippingService.getServiceName(53321))
    return result
  } catch (error) {
    console.error('‚ùå Error:', error.message)
  }
}

// Test 7: Validate Address
function testValidateAddress() {
  console.log('=== Test 7: Validate Address ===')

  // Valid address
  const validAddress = {
    provinceId: 202,
    districtId: 1542,
    wardCode: '21211',
    street: 'S·ªë 1 ƒê∆∞·ªùng L√™ Du·∫©n, Ph∆∞·ªùng B·∫øn Ngh√©',
  }

  const validResult = shippingService.validateAddress(validAddress)
  console.log('Valid Address:', validResult.valid ? '‚úÖ' : '‚ùå', validResult)

  // Invalid address
  const invalidAddress = {
    provinceId: null,
    districtId: null,
    wardCode: null,
    street: '123',
  }

  const invalidResult = shippingService.validateAddress(invalidAddress)
  console.log('Invalid Address:', invalidResult.valid ? '‚úÖ' : '‚ùå', invalidResult)
}

// Test 8: Format helpers
function testFormatHelpers() {
  console.log('=== Test 8: Format Helpers ===')

  console.log('Currency:')
  console.log('  - 25000 VNƒê =', shippingService.formatCurrency(25000))
  console.log('  - 1500000 VNƒê =', shippingService.formatCurrency(1500000))

  console.log('Weight:')
  console.log('  - 500g =', shippingService.formatWeight(500))
  console.log('  - 1500g =', shippingService.formatWeight(1500))
  console.log('  - 5000g =', shippingService.formatWeight(5000))

  console.log('Service Names:')
  console.log('  - 53320 =', shippingService.getServiceName(53320))
  console.log('  - 53321 =', shippingService.getServiceName(53321))
}

// Run all tests
async function runAllTests() {
  console.log('üöÄ Starting GHN Shipping Service Tests...\n')

  await testGetProvinces()
  console.log('\n')

  await testGetDistricts()
  console.log('\n')

  await testGetWards()
  console.log('\n')

  await testGetServices()
  console.log('\n')

  await testCalculateShippingFee()
  console.log('\n')

  await testCalculateHeavyPackage()
  console.log('\n')

  testValidateAddress()
  console.log('\n')

  testFormatHelpers()
  console.log('\n')

  console.log('‚úÖ All tests completed!')
}

// Export for use in browser console or component
if (typeof window !== 'undefined') {
  window.testGHNShipping = {
    runAll: runAllTests,
    testGetProvinces,
    testGetDistricts,
    testGetWards,
    testGetServices,
    testCalculateShippingFee,
    testCalculateHeavyPackage,
    testValidateAddress,
    testFormatHelpers,
  }

  console.log('üí° GHN Test functions loaded! Run: testGHNShipping.runAll()')
}

// For Node.js testing
if (typeof module !== 'undefined' && module.exports) {
  module.exports = {
    runAllTests,
    testGetProvinces,
    testGetDistricts,
    testGetWards,
    testGetServices,
    testCalculateShippingFee,
    testCalculateHeavyPackage,
    testValidateAddress,
    testFormatHelpers,
  }
}
